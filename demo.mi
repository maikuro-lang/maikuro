package demo.showcase;

import maikuro.Delay;
import platform.avr.atmega328;

class Runner {
    Int8 counter = 0;

    fun increaseCounter() {
        this.counter++;
    }

    fun run(): Int32 {
        Pin11.mode(OUTPUT);

        loop {
            if (this.counter % 10 == 0) {
               Pin11.level(HIGH);
            } else {
               Pin11.level(LOW);
            }

            this.increaseCounter();

            Delay.ms(100);
        }

        return 0;
    }
}

fun main(Int32 argc, String[] argv): Int32 {
    var runner = new Runner();

    return runner.run();
}

#[Demo(demo: foo)]
package foo.bar;

import bar.foo;
import some.thing as Something;

var a, b = c, d = 10;
var foo = bar;
var @foo = bar;

var foo, bar = bar, two;

var Int? foo = bar;
var foo, bar = bar, demo;
var UInt32 | Demo foo;

var foo = bar;
var foo, bar = bar = demo;
var UInt32 | Demo foo;
var UInt32 | Demo | NullableString? foo;
var Foo[10] a = b;
var Int? f = f;

fun main(Int32 argc, String[] argv): Int32 {

}
var Foo[] f = dd;
var Foo[]? f = dd;
var Foo[10]? f = dd;

alias NullableString = String?;
#[IgnoreType]
#[IgnoreTypes]
alias Int32OrString = Int32 | String[];

class Foobar {
    fun constructor() {

    }

    #[Hidden]
    private fun hiddenMethod(): String {

    }
}